#!/usr/bin/env perl
use Mojolicious::Lite;
use Mojo::Home;
use Parrot::HLL;
use Parrot::Library;

# Read configuration file
plugin 'yaml_config';
# Send file to the client
plugin 'RenderFile';

app->secret(app->config->{passphrase});

get '/' => 'index';

post '/' => sub {
    my $self = shift;

    my ($name, $builder, $harness, $with_pmc, $with_ops, $with_doc, $archive_path);
    if (defined $self->param("hll")) {
        ($name, $builder, $harness, $with_pmc, $with_ops, $with_doc)
                            = map { $self->param($_) } qw/hll_name hll_builder hll_test with_pmc with_ops with_doc/;
                            
        my $hll = Parrot::HLL->new();
        $hll->init($name, $builder, $harness, $with_pmc, $with_ops, $with_doc, $self->app->config->{hll_template});
        
        if ($archive_path = $hll->generate()) {
            $self->app->log->debug("The HLL created!");
        }
    }
    elsif(defined $self->param("lib")){
        ($name, $builder, $harness) = map { $self->param($_) } qw/lib_name lib_builder lib_test/;

        my $library = Parrot::Library->new();
        $library->init($name, $builder, $harness, $self->app->config->{hll_template});
        
        if ($archive_path = $library->generate()) {
            $self->app->log->debug("The Library created!");
        }
    }
    
    $self->render_file(
        'filepath'   => $archive_path,
        'format'     => 'zip' 
    );
} => 'index';

app->start;
